#############################################################
## NAMD: Minimization and Equilibration of Ubiquitin 	   ##
#############################################################

## USAGE
# Search for TODO
# Change "if {0}" to "if {1}" and vice-versa to enable/disable a section.

## ------------------------------------------------------------------------------
# Minimization and Equilibration of Ubiquitin in a Water Box (PERIODIC Boundary Condition)
## ------------------------------------------------------------------------------

# TODO: 0 -> first run, increment for successive restarts. 
# for restarts, output file names are appended by the run_index 
# ex. for 1st restart (run_index 1) -> output1.dcd, output1.coor
set run_index		0;

# TODO (IF RESTARTING): last step of previous run (from log file)
firsttimestep		0;
#############################################################
## ADJUSTABLE PARAMETERS                                   ##
#############################################################

structure          ../common/ubq_wb.psf;		# TODO: input structure info (.psf) file
coordinates        ../common/ubq_wb.pdb;		# TODO: input initial coordinates (.pdb) file

# defining variables used at multiple places
set temperature          310;
set outputnameprefix     ubq_wb_eq;				# TODO: output name	

# output name for this run
if {$run_index > 0} {
	set outputname           $outputnameprefix$run_index; # for restarts, append run_index on the file name
} else {
	set outputname           $outputnameprefix;	
}

# continuing a run
if {$run_index > 0} {
	# restart file name prefix from last run
	if {$run_index == 1} {
		# First restart -> just prefix
		set restartfilename		$outputnameprefix.restart;	   
	} else { 
		# 2nd, 3rd etc restarts
		set restartfilename		$outputnameprefix[expr $run_index - 1].restart;
	}
	
	binCoordinates        $restartfilename.coor;	# binary coordinates from last run restart.coor file
	binVelocities         $restartfilename.vel;	# binary velocities from last run restart.vel file
	extendedSystem        $restartfilename.xsc;	# cell dimensions from last run restart.xsc file (only for variable V simulations)
	
	#numsteps        100000;		# (redundant) run stops when this step is reached
} 


#############################################################
## SIMULATION PARAMETERS                                   ##
#############################################################

# Input
paraTypeCharmm	    on;
parameters          ../common/par_all27_prot_lipid.inp;
#parameters		par_all36_carb.prm;
#parameters		par_all36_cgenff.prm;
#parameters		par_all36_lipid_ljpme.prm;
#parameters		par_all36m_prot.prm;
#parameters		par_all36_na.prm;
#parameters		par_all36_prot.prm;
#parameters		toppar_water_ions.str;		# Stream file for water and ions

# NOTE: Do not set the initial temperature if you have also specified a .vel restart file. 
# The temp will be calculated from restart.vel file
if {$run_index == 0} {
	temperature         $temperature;	# the initial temperature
}

# Force-Field Parameters
exclude             scaled1-4;
1-4scaling          1.0;
cutoff              12.0;	# distance in Angstrom
switching           on;		# whether to use switching functions to smoothly bring interaction energy to 0 at cutoff distance (and not abruptly set it to 0)
switchdist          10.0;	# distance (in Angstrom) to start the smooth decay of interaction energy. (< cutoff distance)
pairlistdist        14.0;	# distance (in A) up-till which to list pairs of atoms for each atom 


# Integrator Parameters
timestep            1.0;	# delta t, in femtoseconds
rigidBonds          all;	# needed for <= 2fs steps
nonbondedFreq       1;		# no of timesteps between non-bonded interaction calculations
fullElectFrequency  1;		# no of timesteps between electrostatic interaction calculation	  
stepspercycle       5;		# no of timesteps between the refreshing of pair list of atoms within pair-list-distance

### Generalized Bron Implicit Solvent: implicit model for Water AND Ions
# Note: With GBIS
#		1. Structure and Coordinates should NOT contain any water or ion molecules
#		2. No periodic boundary condition
#		3. No Constant P control
#		4. No PME (i.e no long range electrostatics)
#		5. Cut off should be higher than that with PME to account long-rong electrostatics
if {0} {
	gbis                on;
	# cutoff			14.0;
	alphaCutoff         12.0;	# (A) Used to calculate Born radius of atoms. Usually a few A smaller than cutoff distance 
	ionConcentration    0.3;	# Concentration of implict ions in moles/L (M). High conc -> high electrostatic screening (low elec interactions b/w actual atoms)
}

# Periodic Boundary Conditions (TODO: calaulate for your system)
# NOTE 1: cell origin is the geometric center of unit cell from absolute origin
# cell basis vectors are from bottom-left vertex of the unit cell
# all dimensions are in Angstrom
if {1} {
	# NOTE 2: DON'T specify when restart.xsc file is also specified as "extendedSystem" ex. when restarting sim
	# These are then read from restart.xsc file
	if {$run_index == 0} {
		cellBasisVector1    42.0    0.   0.0
		cellBasisVector2     0.0  44.0   0.0
		cellBasisVector3     0.0    0   47.0
		cellOrigin          31.0   29.0  17.5
	}

	wrapAll             on
}

## Constant Temperature Control
# Principle: Total K.E of system = sum(1/2 mv^2) = 3/2N KbT (N: no of atoms)
# NOTE: Atomic velocities are rescaled at each frame to maintain constant T (or K.E)
#       Disable to minimize disturbances in atomic motion ex. when using Constant Vel SMD 
if {1} {
	langevin            on;		# do langevin dynamics
	langevinDamping     1;		# damping coefficient (gamma) of 1/ps
	langevinTemp        $temperature;	# temperature to maintain during equilibration
	langevinHydrogen    off;	# whether to use Langevin dynamics on Hydrogen
}

# Constant Pressure Control (variable volume) - only for PERIODIC systems
if {1} {
	useGroupPressure      yes;	# whether to use the pressure of a group of H atoms rather than individual H's. needed for rigidBonds
	useFlexibleCell       no;	# allows cell dimensions to vary independently of each other
	useConstantArea       no;	# whether to maintain constant x-y cross-sectional area, and just vary z-dimension

	langevinPiston        on
	langevinPistonTarget  1.01325;	# target pressure (in bar) that the langevin piston tries to maintain during simulation
	langevinPistonPeriod  100.0;	# oscillation time period (in femtoseconds) of langevin piston
	langevinPistonDecay   50.0;	# damping time constant (in femtoseconds) of langevin piston
	langevinPistonTemp    $temperature;	# must be equal to langevinTemp if constant T control is in use
}

# Particle Mesh Ewald (PME) (for full-system periodic electrostatics)
if {1} {
	PME                 yes;	# Enable PME - Fast solver for long-range electrostatics in periodic systems
	PMEGridSpacing      1.0;	# spacing b/w PME grid points on cell basis vectors (in Angstrom), used for automatic PME grid sizes

	# manual grid definition (must be divisible by 2, 3 or 5 for Fast Fourier Transform)
	#PMEGridSizeX        45;	# no of grid points on cellBasisVector1
	#PMEGridSizeY        45;	# no of grid points on cellBasisVector2
	#PMEGridSizeZ        48;	# no of grid points on cellBasisVector3
}

# Multistep Summation Method (MSM) - mostly used for non-periodic systems
if {0} {
	MSM                 on;		# Enable MSM - Fast solver for long-range electrostatics, mostly used for non-periodic systems
	MSMGridSpacing      2.5;	# (in Angstrom) very sensitive to performance, use this default
	MSMxmin            -5.0
	MSMxmax             60.0
	MSMymin            -5.0 
	MSMymax             60.0
	MSMzmin            -15.0 
	MSMzmax             46
}

# Output
outputName          $outputname

restartfreq         500;	# how often (in no of time steps) the simulation state is saved for easy restart later. saves atomic coordinates and velocities in restart.coord and restart.vel file
dcdfreq             100;		# how often (in no of time steps) the atomic coordinates are saved in trajectory .dcd file
outputEnergies      100;		# how often (in no of time steps) the system Energy is saved in .log file
if {1} {
	outputPressure      100;		# ONLY FOR PERIODIC SIMS: how often (in no of time steps) the system Pressure is saved in .log file
}
if {1} {
	xstfreq             250;	# ONLY FOR VARIABLE VOLUME: how often (in no of time steps) the unit cell dimensions (or vertices) are saved in extended system trajectory .xst file
}

# IMD Settings (can view simultaion live in VMD)
if {0} {
	IMDon           on
	IMDport         3000    ;# port number (enter it in VMD)
	IMDfreq         1       ;# send every 1 frame
	IMDwait         no      ;# wait for VMD to connect before running?
}

#############################################################
## EXTRA PARAMETERS                                        ##
#############################################################
# Put here any custom parameters that are specific to this job (e.g SMD, TclForces, etc...)

# Fixed Atoms Constraint (ex in SMD)
if {0} {
	fixedAtoms          on;		# allow some atoms to be spacially fixed
	fixedAtomsCol       B;		# which column is used to specify fixed aToms (one of X, Y, Z, B (beta), O (occupancy)) [defau;t: beta (B)]
	fixedAtomsFile      ../common/ubq_wb_eq.smd-pcv.pdb;	# TODO: pdb file containing Fixed atoms (atoms with beta B = 1)
}

# SMD: Steered Molecular Dynamics (only for constant velocity pulling)
if {0} {
	SMD			on;		# enable SMD
	SMDFile			../common/ubq_wb_eq.smd-pcv.pdb;		# TODO: pdb file containing SMD atoms (atoms with occupancy O = 1)
	SMDk			7;		# (kcal/mol/Ã…2) SMD virtual spring constant between SMD atom and dummy atom 
	SMDVel			0.001;	# (A/timestep) constant pull velocity applied to dummy atom
	
	# Unit vector representing the direction of applied pull. 
	# Mostly its just the unit vector connecting fixed and SMD atom = vecnorm [vecsub $smdatompos $fixedatompos]
	SMDDir			0.3976350723925137 0.37333521574953327 0.8381570055094988;
	
	SMDOutputFreq	10;		# timesteps between consecutive smd output to .log file
}

# Constant Force Pulling SMD (note that this does not require "SMD on")
if {0} {
	constantforce yes;		# Enable constant force pull on below specified atoms
			
	# pdb containing atoms to which constant force will be applied
	# constant force is ONLY applied to atoms with occupancy O != 0 in the below file
	# 1. occupancy (O) of each atom is treated as the magnitude of Force to be applied
	# 2. the x,y,z values of each atom are used to specify direction of force to be applied (and NOT coordinates)
	# 3. Force vector = (x, y, z) * O
	consforcefile ../common/ubq_wb_eq.smd-pcf.pdb;	
}

#############################################################
## EXECUTION SCRIPT                                        ##
#############################################################

# Minimization (atomic velocities are set to 0 before minimization)
# TODO: Disable if already minimized, like doing SMD on already equilibraited system
if {$run_index == 0} {
	if {1} {
		minimize            20000;			# TODO: time steps to run minimization of energy
		reinitvels          $temperature;	# after minimization, re-initialize atomic velocities according to this temperature
	}
}

# Equilibriation
run 200000;		# TODO: time steps to equilibriate the system
